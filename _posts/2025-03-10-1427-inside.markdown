---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id-1427-inside
title: Baekjun, number 1427, inside
# title: Baekjun, number 1427, inside
# post specific
# if not specified, .name will be used from _data/owner/[language].yml
author: Yeonuk
# multiple category is not supported
category: Java
# multiple tag entries are possible
tags: [java, coding test]
# thumbnail image for post
img: ":post_pic1.jpg"
# disable comments on this page
# comments_disable: true

# publish date
date: 2025-03-10 09:00:00 +0900
# seo
# if not specified, date will be used.
#meta_modify_date: 2021-08-10 11:32:53 +0900
# check the meta_common_description in _data/owner/[language].yml
#meta_description: ""

# optional
# please use the "image_viewer_on" below to enable image viewer for individual pages or posts (_posts/ or [language]/_posts folders).
# image viewer can be enabled or disabled for all posts using the "image_viewer_posts: true" setting in _data/conf/main.yml.
#image_viewer_on: true
# please use the "image_lazy_loader_on" below to enable image lazy loader for individual pages or posts (_posts/ or [language]/_posts folders).
# image lazy loader can be enabled or disabled for all posts using the "image_lazy_loader_posts: true" setting in _data/conf/main.yml.
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

## Baekjun No. 1427, this is an article about Sort Inside.

I want to solve the coding test problem, find out how to solve it differently from the retrospective of the problem I solved, and get to know.

Let's get to the problem first.

{:data-align="center"}

<!-- outline-end -->

### Problem

It is easy to arrange an array. Given a number, let's arrange each digit of the number in descending order.

#### Input

The number N that you want to sort is given in the first line. N is a natural number less than or equal to 1,000,000,000.

#### Output

Outputs the number of digits arranged in descending order on the first line.

### problem solving

```java
import java.io.*;
import java.util.*;

class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String input = br.readLine();
        br.close();

        char[] charArray = input.toCharArray();
        Arrays.sort(charArray);

        StringBuilder sb = new StringBuilder(new String(charArray));
        System.out.println(sb.reverse());
    }
}
```

#### Solution Description

First, use BufferedReader to receive a single line of string from the user.

After the input is finished, call br.close() to close the input stream.

After that, convert the entered string into a character array.

This allows you to manipulate individual characters in a string.

Next, use Arrays.sort() to arrange the character arrangements in ascending order.

In this process, the alphabet and numbers are sorted in dictionary order.

For example, if the input is "3142", it becomes "1234" after sorting, and if you type "dcba", it becomes "abcd".

Subsequently, the aligned character arrangement is transformed into a string and then wrapped using the StringBuilder object.

The reason you use StringBuilder is that you can manipulate strings efficiently.

Finally, we flip the string using StringBuilder's reverse() method and output it through System.out.println().

For example, "abcd" is converted to "dcba", and "1234" is converted to "4321" when a number is entered.

The overall flow of this code is to convert a string into a character array, perform ascending sort, convert it into descending order using StringBuilder, and output it.

This can be useful for sorting numbers and alphabetic strings in descending order.
