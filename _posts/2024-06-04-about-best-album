---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id_About_Best_Album
title: Best Album (with.Java)
# title: Best Album (with.Java)
# if not specified, .name will be used from _data/owner/[language].yml
author: Yeonuk
# multiple category is not supported
category: Java
# multiple tag entries are possible
tags: [java, coding test, hash]
# thumbnail image for post
img: ":post_pic1.jpg"
# disable comments on this page
# comments_disable: true

# publish date
date: 2024-06-04 09:00:00 +0900
# seo
# if not specified, date will be used.
#meta_modify_date: 2021-08-10 11:32:53 +0900
# check the meta_common_description in _data/owner/[language].yml
#meta_description: ""

# optional
# please use the "image_viewer_on" below to enable image viewer for individual pages or posts (_posts/ or [language]/_posts folders).
# image viewer can be enabled or disabled for all posts using the "image_viewer_posts: true" setting in _data/conf/main.yml.
#image_viewer_on: true
# please use the "image_lazy_loader_on" below to enable image lazy loader for individual pages or posts (_posts/ or [language]/_posts folders).
# image lazy loader can be enabled or disabled for all posts using the "image_lazy_loader_posts: true" setting in _data/conf/main.yml.
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

## "의상 (with.Java)" 문제에 대하여 알아본 글입니다.

코딩 테스트 문제를 풀며, 풀었던 문제에 대한 회고와 다른 풀이 방법을 알아보며, 알아가고자 합니다.

문제에 대해 먼저 알아보겠습니다.

{:data-align="center"}

<!-- outline-end -->

### 문제

코니는 매일 다른 옷을 조합하여 입는것을 좋아합니다.

예를 들어 코니가 가진 옷이 아래와 같고, 오늘 코니가 동그란 안경, 긴 코트, 파란색 티셔츠를 입었다면 다음날은 청바지를 추가로 입거나 동그란 안경 대신 검정 선글라스를 착용하거나 해야합니다.

- 종류 이름
- 얼굴 동그란 안경, 검정 선글라스
- 상의 파란색 티셔츠
- 하의 청바지
- 겉옷 긴 코트

코니는 각 종류별로 최대 1가지 의상만 착용할 수 있습니다.

예를 들어 위 예시의 경우 동그란 안경과 검정 선글라스를 동시에 착용할 수는 없습니다.

착용한 의상의 일부가 겹치더라도, 다른 의상이 겹치지 않거나, 혹은 의상을 추가로 더 착용한 경우에는 서로 다른 방법으로 옷을 착용한 것으로 계산합니다.

코니는 하루에 최소 한 개의 의상은 입습니다.

코니가 가진 의상들이 담긴 2차원 배열 clothes가 주어질 때 서로 다른 옷의 조합의 수를 return 하도록 solution 함수를 작성해주세요.

#### 제한사항

- clothes의 각 행은 [의상의 이름, 의상의 종류]로 이루어져 있습니다.
- 코니가 가진 의상의 수는 1개 이상 30개 이하입니다.
- 같은 이름을 가진 의상은 존재하지 않습니다.
- clothes의 모든 원소는 문자열로 이루어져 있습니다.
- 모든 문자열의 길이는 1 이상 20 이하인 자연수이고 알파벳 소문자 또는 - `'_'` 로만 이루어져 있습니다.

#### 입출력 예시

<!--
| lines                     | result |
| ------------------------- | ------ |
| [[0, 1], [2, 5], [3, 9]]  | 2      |
| [[-1, 1], [1, 3], [3, 9]] | 0      |
| [[0, 5], [3, 9], [1, 10]] | 8      | -->

| clothes                                                                                    | return |
| ------------------------------------------------------------------------------------------ | ------ |
| [["yellow_hat", "headgear"], ["blue_sunglasses", "eyewear"], ["green_turban", "headgear"]] | 5      |
| [["crow_mask", "face"], ["blue_sunglasses", "face"], ["smoky_makeup", "face"]]             | 3      |

### 문제에 대한 나의 풀이

```java
import java.util.*;

class Solution {
    public int solution(String[][] clothes) {
        int answer = 1;
        HashMap<String, Integer> map = new HashMap<>();

        for(int i = 0; i < clothes.length; i++){
            map.put(clothes[i][1], map.getOrDefault(clothes[i][1], 0) + 1);
        }

        for(String key : map.keySet()){
            answer *= map.get(key) + 1;
        }
        return answer - 1;
    }
}
```

### 풀이 리뷰

solution 메서드는 이차원 문자열 배열 clothes를 입력으로 받습니다.

answer 변수를 초기화하고, 결과값을 저장할 것입니다.

초기값을 1로 설정하는 이유는 아무 의상도 입지 않은 경우를 고려하기 위해서입니다.

HashMap<String, Integer> 객체 map을 생성합니다.

이 map은 의상의 종류를 키로 가지고, 해당 종류의 의상 수를 값으로 가집니다.

첫 번째 for 루프를 통해 clothes 배열을 순회하면서 각 의상의 종류를 키로 하여 map에 추가합니다. 이미 해당 종류의 의상이 존재한다면 값을 증가시킵니다.

두 번째 for 루프를 통해 map의 모든 키를 순회하면서 각 의상 종류별로 가능한 조합의 수를 계산합니다.

각 의상 종류별로 가능한 조합의 수는 해당 종류의 의상을 입지 않는 경우를 포함하여 계산합니다. 따라서 각 의상 종류별 의상 수에 1을 더하고, 결과값에 곱해줍니다.

모든 의상 종류별 가능한 조합의 수를 계산한 후에는 마지막에 1을 빼주어야 합니다. 이는 아무 의상도 입지 않는 경우를 제외하기 위함입니다.
마지막으로 결과값을 반환합니다.
