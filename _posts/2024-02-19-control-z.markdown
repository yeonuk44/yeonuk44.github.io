---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id_About_Control_Z
title: Control 'Z' (with. Java)
# title: Control 'Z' (with. Java)
# post specific
# if not specified, .name will be used from _data/owner/[language].yml
author: Yeonuk
# multiple category is not supported
category: Java
# multiple tag entries are possible
tags: [java, coding test]
# thumbnail image for post
img: ":post_pic1.jpg"
# disable comments on this page
# comments_disable: true

# publish date
date: 2024-02-19 09:00:00 +0900
# seo
# if not specified, date will be used.
#meta_modify_date: 2021-08-10 11:32:53 +0900
# check the meta_common_description in _data/owner/[language].yml
#meta_description: ""

# optional
# please use the "image_viewer_on" below to enable image viewer for individual pages or posts (_posts/ or [language]/_posts folders).
# image viewer can be enabled or disabled for all posts using the "image_viewer_posts: true" setting in _data/conf/main.yml.
#image_viewer_on: true
# please use the "image_lazy_loader_on" below to enable image lazy loader for individual pages or posts (_posts/ or [language]/_posts folders).
# image lazy loader can be enabled or disabled for all posts using the "image_lazy_loader_posts: true" setting in _data/conf/main.yml.
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

## This article looks into the "Control 'Z'" problem.

As I solve coding test problems, I look back on the problems I solved and look into different solution methods to learn more.

Let's look at the problem first.

{:data-align="center"}

<!-- outline-end -->

### problem

You are given a string containing numbers and "Z" separated by spaces.

I'm trying to add numbers in a string one after another.

At this time, if "Z" appears, it means subtracting the number that was added just before.

Given a string s consisting of a number and "Z", complete the solution function so that it returns the value the wizard found.

#### Restrictions

- Length of 1 ≤ s ≤ 200
- -1,000 < number of elements in s < 1,000
- s consists of a number, "Z", and a space.
- The numbers in s and "Z" are separated from each other by a space.
- Consecutive spaces are not allowed.
- There are no numbers starting with 0 except 0.
  -s does not start with "Z".
- There are no spaces at the beginning or end of s.
- “Z” never appears consecutively.

#### Input/Output Example

| s             | result |
| ------------- | ------ |
| "1 2 Z 3"     | 4      |
| "10 20 30 40" | 100    |

<!-- | start_num | end_num | result |
| --------- | ------- | ------ |
| 10 | 3 | 0 | -->

### My solution to the problem

```java
class Solution {
     public int solution(String s) {
         int answer = 0;
         String[] temp = s.split(" ");
         int tempInt = 0;
         for(String a : temp){
             if(a.equals("Z")){
                 answer -= tempInt;
             } else{
                 answer += Integer.parseInt(a);
                 tempInt = Integer.parseInt(a);
             }
         }
         return answer;
     }
}
```

### Solution explanation

- String separation: Split the given string s based on spaces through s.split(" ") and store it in the string array temp.
- Number and 'Z' processing: While traversing the array temp through a for statement, if each element is 'Z', the previously stored value tempInt is subtracted from the sum answer to date, and if it is a number, converted to an integer and the current value is calculated. Add to the sum.
- Remember previous value: Every time 'Z' appears, subtraction is performed from the current sum, so the previously stored integer value is remembered in tempInt and used.

**Code Advantages**

- Simple logic: The logic for processing strings and calculating sums using simple patterns is intuitive.
- Array utilization: By separating the string and storing it in an array, each element can be processed sequentially.

**Code Disadvantages**

- Insufficient error handling: Only cases where 'Z' and numbers appear are considered, and error handling for input values is insufficient. It would be a good idea to add validation, etc.
- Fixed separation criteria: In the current code, strings are separated based on spaces, but various other cases are not considered. It is necessary to add logic to handle various cases depending on the format of the input data.
