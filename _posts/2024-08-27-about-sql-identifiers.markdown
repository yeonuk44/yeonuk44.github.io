---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id_About_SQL_Identifiers
title: About SQL Identifiers
# title: About SQL Identifiers
# if not specified, .name will be used from _data/owner/[language].yml
author: Yeonuk
# multiple category is not supported
category: DB
# multiple tag entries are possible
tags: [db]
# thumbnail image for post
img: ":post_pic1.jpg"
# disable comments on this page
# comments_disable: true

# publish date
date: 2024-08-27 09:00:00 +0900
# seo
# if not specified, date will be used.
#meta_modify_date: 2021-08-10 11:32:53 +0900
# check the meta_common_description in _data/owner/[language].yml
#meta_description: ""

# optional
# please use the "image_viewer_on" below to enable image viewer for individual pages or posts (_posts/ or [language]/_posts folders).
# image viewer can be enabled or disabled for all posts using the "image_viewer_posts: true" setting in _data/conf/main.yml.
#image_viewer_on: true
# please use the "image_lazy_loader_on" below to enable image lazy loader for individual pages or posts (_posts/ or [language]/_posts folders).
# image lazy loader can be enabled or disabled for all posts using the "image_lazy_loader_posts: true" setting in _data/conf/main.yml.
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

## This article examines the identifier of SQL.

Hello!

Today, we're going to talk about identifiers in Structured Query Language (SQL).

In SQL, identifiers are an important concept used to uniquely identify data within a database.

In this post, we will take a closer look at the types of identifiers and how they are used in SQL.

{:data-align="center"}

<!-- outline-end -->

## Primary Key

### Overview

The default key is a field used to uniquely identify each row.

Each table can have one default key, which is used to uniquely identify each row of that table.

### How to use it

The default key usually has an auto increment value, such as AUTO_INCREMENT or IDENTITY, and it automatically increases with each row added.

```sql
CREATE TABLE Students (
    StudentID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(50),
    Major VARCHAR(50)
);
```

## Foreign Key

### Overview

Foreign keys are fields that refer to the default keys in other tables.

This allows you to establish and maintain a relationship between two tables.

### How to use it

Foreign keys are generated by referencing the default keys in another table.

This allows you to establish a relationship between the parent and child tables.

```sql
CREATE TABLE Enrollments (
    EnrollmentID INT PRIMARY KEY AUTO_INCREMENT,
    StudentID INT,
    SubjectID INT,
    FOREIGN KEY (StudentID) REFERENCES Students(StudentID),
    FOREIGN KEY (SubjectID) REFERENCES Subjects(SubjectID)
);
```

## Unique Key

### Overview

A unique key is a field that does not allow duplication within a table.

Each row must have a unique value, but unlike the default key, it can have a NULL value.

### How to use it

A unique key must not have duplicate values for each row and can have a NULL value.

This ensures that certain fields are not duplicated.

```sql
CREATE TABLE Users (
    UserID INT PRIMARY KEY AUTO_INCREMENT,
    Username VARCHAR(50) UNIQUE,
    Email VARCHAR(50) UNIQUE
);
```

## at the end of the day

Identifiers in SQL are essential for uniquely identifying data.

You can maintain database accuracy and consistency by appropriately utilizing various types of identifiers such as primary keys, foreign keys, and unique keys.

When designing a database, try to select and utilize identifiers well to ensure efficient data management.

I hope this posting helped me understand the identifiers in SQL.

Thank you!
