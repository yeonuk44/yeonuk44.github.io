---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id-9095-1-2-3-plus
title: Baekjun, 9095, 1, 2, 3 plus (with. Java)
# title: Baekjun, 9095, 1, 2, 3 plus (with. Java)
# post specific
# if not specified, .name will be used from _data/owner/[language].yml
author: Yeonuk
# multiple category is not supported
category: Java
# multiple tag entries are possible
tags: [java, dfs coding test]
# thumbnail image for post
img: ":post_pic1.jpg"
# disable comments on this page
# comments_disable: true

# publish date
date: 2025-03-09 09:00:00 +0900
# seo
# if not specified, date will be used.
#meta_modify_date: 2021-08-10 11:32:53 +0900
# check the meta_common_description in _data/owner/[language].yml
#meta_description: ""

# optional
# please use the "image_viewer_on" below to enable image viewer for individual pages or posts (_posts/ or [language]/_posts folders).
# image viewer can be enabled or disabled for all posts using the "image_viewer_posts: true" setting in _data/conf/main.yml.
#image_viewer_on: true
# please use the "image_lazy_loader_on" below to enable image lazy loader for individual pages or posts (_posts/ or [language]/_posts folders).
# image lazy loader can be enabled or disabled for all posts using the "image_lazy_loader_posts: true" setting in _data/conf/main.yml.
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

## This is an article about Baekjun 9095, 1, 2, 3 plus (with.Java).

I want to solve the coding test problem, find out how to solve it differently from the retrospective of the problem I solved, and get to know.

Let's get to the problem first.

{:data-align="center"}

<!-- outline-end -->

### Problem

There are a total of 7 methods of expressing integer 4 as the sum of 1, 2, and 3.

You must use at least one number when representing the sum.

1+1+1+1

1+1+2

1+2+1

2+1+1

2+2

1+3

3+1

Write a program to find the number of ways to express n as the sum of 1, 2, and 3, given the integer n.

#### Input

The number of test cases T is given in the first line.

Each test case consists of a line, given an integer n. N is positive and is less than 11.

#### Output

For each test case, output the number of methods to express n as the sum of 1, 2, and 3.

### problem solving

```java
import java.io.*;

public class Main {

	public static void main(String[] args) throws Exception {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

		int T = Integer.parseInt(br.readLine());

		for (int t = 0; t < T; t++) {
			int n = Integer.parseInt(br.readLine());
			int[] dp = new int[11];

			dp[1] = 1;
			dp[2] = 2;
			dp[3] = 4;

			for (int i = 4; i <= n; i++) {
				dp[i] = dp[i - 1] + dp[i - 2] + dp[i - 3];
			}

			bw.write(dp[n] + "\n");
		}
		bw.flush();
	}
}
```

#### Solution Description

This code is a program that utilizes dynamic programming to calculate the number of methods for expressing integer num as the sum of 1, 2, and 3.

I'll explain it with examples to make it easier to understand mathematically.

- Every time you make a number i
  - (if you make i-1 and add 1)
  - (If you make i-2 and add two)
  - (if you make i-3 and add 3)
- Since these three methods do not overlap each other, the total number of cases is  
  \[
  dp[i] = dp[i-1] + dp[i-2] + dp[i-3]
  \]
  It can be defined as .

It should now be understood that it does not mean (i-1) + (i-2) + (i-3) = i, but that it is an igniting representation of all cases in which \*\*i can be made.
