---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id_About_DML
title: About Domain-Specific Language (DML)
# title: About Domain-Specific Language (DML)
# post specific
# if not specified, .name will be used from _data/owner/[language].yml
author: Yeonuk
# multiple category is not supported
category: SQL
# multiple tag entries are possible
tags: [sql, db]
# thumbnail image for post
img: ":post_pic1.jpg"
# disable comments on this page
# comments_disable: true

# publish date
date: 2024-03-07 09:00:00 +0900
# seo
# if not specified, date will be used.
#meta_modify_date: 2021-08-10 11:32:53 +0900
# check the meta_common_description in _data/owner/[language].yml
#meta_description: ""

# optional
# please use the "image_viewer_on" below to enable image viewer for individual pages or posts (_posts/ or [language]/_posts folders).
# image viewer can be enabled or disabled for all posts using the "image_viewer_posts: true" setting in _data/conf/main.yml.
#image_viewer_on: true
# please use the "image_lazy_loader_on" below to enable image lazy loader for individual pages or posts (_posts/ or [language]/_posts folders).
# image lazy loader can be enabled or disabled for all posts using the "image_lazy_loader_posts: true" setting in _data/conf/main.yml.
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

## DDL(Domain-Specific Language)에 대하여 알아본 글입니다.

안녕하세요! 오늘은 SQL에 대한 DDL(Domain-Specific Language)에 대해 알아보도록 하겠습니다.

{:data-align="center"}

<!-- outline-end -->

### SQL

SQL은 데이터베이스 관리 시스템(DBMS)에서 데이터를 정의, 조작 및 제어하기 위한 언어입니다. 그 중 DDL은 데이터베이스 객체를 생성, 수정 및 삭제하기 위해 사용되는 SQL의 하위 언어입니다. 이제 DDL에 대해 자세히 알아보도록 하겠습니다.

### DDL

DDL은 데이터베이스의 구조를 정의하는 데 사용됩니다. 주요한 DDL 명령어로는 CREATE, ALTER, DROP 등이 있습니다. 이 명령어들을 사용하여 테이블, 인덱스, 뷰, 프로시저 등 다양한 데이터베이스 객체를 생성, 수정 또는 삭제할 수 있습니다.

#### CREATE

CREATE 문은 새로운 데이터베이스 객체를 생성하는 데 사용됩니다. 예를 들어, CREATE TABLE 문을 사용하여 새로운 테이블을 생성할 수 있습니다. CREATE 문은 테이블의 컬럼, 데이터 타입, 제약 조건 등을 정의합니다.

#### ALTER

ALTER 문은 기존 데이터베이스 객체를 수정하는 데 사용됩니다. ALTER TABLE 문을 사용하여 테이블에 새로운 컬럼을 추가하거나, 기존 컬럼의 데이터 타입을 변경하는 등의 작업을 수행할 수 있습니다. ALTER 문은 데이터베이스 구조를 동적으로 변경할 수 있는 강력한 기능을 제공합니다.

#### DROP

DROP 문은 데이터베이스 객체를 삭제하는 데 사용됩니다. DROP TABLE 문을 사용하여 테이블을 삭제할 수 있으며, DROP INDEX 문을 사용하여 인덱스를 삭제할 수도 있습니다. DROP 문은 데이터베이스 객체를 영구적으로 삭제하므로 주의가 필요합니다.

이처럼 DDL은 데이터베이스의 스키마를 정의하고, 데이터베이스 객체를 생성, 수정 또는 삭제함으로써 데이터베이스의 구조를 제어합니다. 따라서 DDL은 데이터베이스 설계와 관련된 중요한 역할을 수행합니다. 데이터베이스 개발자나 관리자는 DDL을 이해하고 적절히 활용하여 데이터베이스를 설계하고 관리해야 합니다.

## 요약

DDL은 데이터베이스 객체의 생성, 수정, 삭제를 위한 강력한 도구이며, 데이터베이스의 구조를 정의하는 데 중요한 역할을 합니다.
