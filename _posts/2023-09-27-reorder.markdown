---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id_About_Reorder
title: Reorder (with.Java)
# title: Reorder (with.Java)

# post specific
# if not specified, .name will be used from _data/owner/[language].yml
author: Yeonuk
# multiple category is not supported
category: Java
# multiple tag entries are possible
tags: [java, coding test]
# thumbnail image for post
img: ":post_pic1.jpg"
# disable comments on this page
# comments_disable: true

# publish date
date: 2023-09-27 09:00:00 +0900
# seo
# if not specified, date will be used.
#meta_modify_date: 2021-08-10 11:32:53 +0900
# check the meta_common_description in _data/owner/[language].yml
#meta_description: ""

# optional
# please use the "image_viewer_on" below to enable image viewer for individual pages or posts (_posts/ or [language]/_posts folders).
# image viewer can be enabled or disabled for all posts using the "image_viewer_posts: true" setting in _data/conf/main.yml.
#image_viewer_on: true
# please use the "image_lazy_loader_on" below to enable image lazy loader for individual pages or posts (_posts/ or [language]/_posts folders).
# image lazy loader can be enabled or disabled for all posts using the "image_lazy_loader_posts: true" setting in _data/conf/main.yml.
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

### In this post, we learned how to reorder a list of integers to create a new array by changing the order of the indexes to match a rule.

We'll do this by solving a coding test problem, reflecting on the problem we solved, and learning about other ways to solve it.

Let's start with the problem

{:data-align="center"}

<!-- outline-end -->

#### Problem

Given a list of integers num_list and an integer n, complete the solution function so that it returns a list that divides num_list by the elements after the nth element and the elements up to the nth element, with the elements after the nth element preceded by the elements up to the nth element.

##### Example input and output

| num_list        | n   | result          |
| --------------- | --- | --------------- |
| [2, 1, 6]       | 1   | [1, 6, 2]       |
| [5, 2, 1, 7, 5] | 3   | [7, 5, 5, 2, 1] |

<!-- | start_num | end_num | result |
| --------- | ------- | ------ |
| 10 | 3 | 0 | -->

#### My solution to the problem

```java
import java.lang.reflect.Array;
class Solution {
    public int[] solution(int[] num_list, int n) {
        int[] answer = new int[num_list.length];
        for(int i = n; i < num_list.length; i++){
            answer[i - n] = num_list[i];
        }
        } int k = 0;
        for(int j = num_list.length - n; j < num_list.length; j++){
            answer[j] = num_list[k++];
        }
        } return answer;
    }
}
```

##### Solution

int[] answer = new int[num_list.length];: Create an array answer to store the result.

This array has the same size as num_list.

The first iteration (for(int i = n; i < num_list.length; i++) {): copies the elements from n to the end of the array into the front part of the array answer. This copies the back part of the rotated array to the front part of the answer array.

Second iteration (for(int j = num_list.length - n; j < num_list.length; j++) {): Copies the elements from the front part of the rotated array, num_list.length - n to the end, into the back part of the answer array. This copies the front part of the rotated array to the back part of the answer array.

return answer;: Returns the answer array that finally stores the rotated array.
