---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id-10816-number-card-2
title: Baekjoon 10816, Number Card 2 (with Java)
# title: Baekjoon 10816, Number Card 2 (with Java)
# post specific
# if not specified, .name will be used from _data/owner/[language].yml
author: Yeonuk
# multiple category is not supported
category: Java
# multiple tag entries are possible
tags: [java, coding test]
# thumbnail image for post
img: ":post_pic1.jpg"
# disable comments on this page
# comments_disable: true

# publish date
date: 2025-08-05 09:00:00 +0900
# seo
# if not specified, date will be used.
#meta_modify_date: 2021-08-10 11:32:53 +0900
# check the meta_common_description in _data/owner/[language].yml
#meta_description: ""

# optional
# please use the "image_viewer_on" below to enable image viewer for individual pages or posts (_posts/ or [language]/_posts folders).
# image viewer can be enabled or disabled for all posts using the "image_viewer_posts: true" setting in _data/conf/main.yml.
#image_viewer_on: true
# please use the "image_lazy_loader_on" below to enable image lazy loader for individual pages or posts (_posts/ or [language]/_posts folders).
# image lazy loader can be enabled or disabled for all posts using the "image_lazy_loader_posts: true" setting in _data/conf/main.yml.
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

## 백준 15649번, N과 M (1) (with.Java) 에 대하여 알아본 글입니다.

코딩 테스트 문제를 풀며, 풀었던 문제에 대한 회고와 다른 풀이 방법을 알아보며, 알아가고자 합니다.

문제에 대해 먼저 알아보겠습니다.

{:data-align="center"}

<!-- outline-end -->

### 문제

자연수 N과 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오.

1부터 N까지 자연수 중에서 중복 없이 M개를 고른 수열

#### 입력

첫째 줄에 자연수 N과 M이 주어진다. (1 ≤ M ≤ N ≤ 8)

#### 출력

한 줄에 하나씩 문제의 조건을 만족하는 수열을 출력한다.

중복되는 수열을 여러 번 출력하면 안되며, 각 수열은 공백으로 구분해서 출력해야 한다.

수열은 사전 순으로 증가하는 순서로 출력해야 한다.

### 문제 풀이

```java
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.BufferedWriter;
import java.io.OutputStreamWriter;
import java.io.IOException;

class Main{
    public static int[] arr;
    public static boolean[] visit;
    public static StringBuilder sb = new StringBuilder();

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        String[] s_arr = br.readLine().split(" ");
        br.close();
        int N = Integer.valueOf(s_arr[0]);
        int M = Integer.valueOf(s_arr[1]);

        arr = new int[M];
        visit = new boolean[N];

        dfs(N, M, 0);

        bw.write(sb.toString());
        bw.flush();
        bw.close();
    }

    public static void dfs(int N, int M, int depth){
        if(depth == M){
            for(int i : arr){
                sb.append(i).append(" ");
            }
            sb.append("\n");
            return;
        }

        for(int i = 0; i < N; i++){
            if(!visit[i]){
                visit[i] = true;
                arr[depth] = i + 1;
                dfs(N, M, depth + 1);
                visit[i] = false;
            }
        }
    }
}
```

#### 풀이 설명

이 코드는 주어진 N과 M에 대해 1부터 N까지의 수 중에서 중복 없이 M개의 수를 순서대로 뽑아 나열하는 모든 경우를 구하는 프로그램입니다.

BufferedReader와 BufferedWriter를 사용하여 입력과 출력을 처리합니다.

먼저, 입력된 값을 읽어 N과 M에 저장합니다.

arr 배열은 선택된 수를 저장하고, visit 배열은 해당 수를 사용했는지를 체크합니다.

StringBuilder는 결과를 저장합니다.

dfs 함수는 깊이 우선 탐색을 통해 모든 경우를 구합니다.

현재 깊이가 M과 같으면 선택된 수를 출력 형식에 맞춰 StringBuilder에 저장하고 반환합니다.

그렇지 않으면 1부터 N까지의 수를 순회하며 아직 사용하지 않은 수를 선택해 다음 깊이로 넘어갑니다.

선택이 끝나면 해당 수를 다시 미사용 상태로 되돌립니다.

이 과정이 끝나면 StringBuilder에 저장된 결과를 BufferedWriter를 사용해 출력하고, 프로그램을 종료합니다.

이 방법을 통해 모든 경우를 효율적으로 생성하고 출력합니다.
