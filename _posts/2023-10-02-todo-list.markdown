---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id_About_Todo_List
title: ToDo List (with.Java)
# title: ToDo List (with.Java)

# post specific
# if not specified, .name will be used from _data/owner/[language].yml
author: Yeonuk
# multiple category is not supported
category: Java
# multiple tag entries are possible
tags: [java, coding test]
# thumbnail image for post
img: ":post_pic1.jpg"
# disable comments on this page
# comments_disable: true

# publish date
date: 2023-10-02 09:00:00 +0900
# seo
# if not specified, date will be used.
#meta_modify_date: 2021-08-10 11:32:53 +0900
# check the meta_common_description in _data/owner/[language].yml
#meta_description: ""

# optional
# please use the "image_viewer_on" below to enable image viewer for individual pages or posts (_posts/ or [language]/_posts folders).
# image viewer can be enabled or disabled for all posts using the "image_viewer_posts: true" setting in _data/conf/main.yml.
#image_viewer_on: true
# please use the "image_lazy_loader_on" below to enable image lazy loader for individual pages or posts (_posts/ or [language]/_posts folders).
# image lazy loader can be enabled or disabled for all posts using the "image_lazy_loader_posts: true" setting in _data/conf/main.yml.
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

### In this article, we learned about to-do lists (with.Java).

We'll be solving coding test problems, reflecting on the problems we've solved, and learning about other ways to solve them.

Let's start with the problem.

{:data-align="center"}

<!-- outline-end -->

#### Problem

Given a string array todo_list containing a list of things to do today and a boolean array finished indicating whether you have finished each task now, write a solution function that returns an array of strings containing the unfinished tasks in order from todo_list.

##### Example input and output

| todo_list                                                  | finished                   | result                           |
| ---------------------------------------------------------- | -------------------------- | -------------------------------- |
| ["problemsolving", "practiceguitar", "swim", "studygraph"] | [true, false, true, false] | ["practiceguitar", "studygraph"] |

<!-- | start_num | end_num | result |
| --------- | ------- | ------ |
| 10 | 3 | 0 | -->

#### My solution to the problem

```java
import java.util.*;
class Solution {
    public String[] solution(String[] todo_list, boolean[] finished) {
        ArrayList<String> answer = new ArrayList<String>();

        for(int i = 0; i < finished.length; i++){
            if(finished[i] == false){
                answer.add(todo_list[i]);
            }
        }
        String[] result = new String[answer.size()];
        for(int j = 0; j < answer.size(); j++){
            result[j] = answer.get(j);
        }
        } return result;
    }
}
```

##### Solution

ArrayList<String> answer = new ArrayList<String>(); : Create a string ArrayList answer to store a list of to-dos that have not yet been completed.

for(int i = 0; i < finished.length; i++) : Iterate over the finished array, checking each to-do for completion.

if(finished[i] == false) : If the current to-do is not finished (i.e., if finished[i] is false), add that to-do to the answer ArrayList.

String[] result = new String[answer.size()];: Create an array of strings result that fits the size of answer ArrayList.

for(int j = 0; j < answer.size(); j++) : Iterate over the answer ArrayList, copying each to-do to the result array.

return result; : Finally, return the result array with the list of to-dos that have not yet been completed.
