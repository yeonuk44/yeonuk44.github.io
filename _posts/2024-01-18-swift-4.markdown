---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id_About_Swift_4
title: About Swift syntax 4 (frequently used functions in Array type)
# title: About Swift syntax 4 (frequently used functions in Array type)
# post specific
# if not specified, .name will be used from _data/owner/[language].yml
author: Yeonuk
# multiple category is not supported
category: Swift
# multiple tag entries are possible
tags: [swift, ios]
# thumbnail image for post
img: ":post_pic1.jpg"
# disable comments on this page
# comments_disable: true

# publish date
date: 2024-01-18 09:00:00 +0900
# seo
# if not specified, date will be used.
#meta_modify_date: 2021-08-10 11:32:53 +0900
# check the meta_common_description in _data/owner/[language].yml
#meta_description: ""

# optional
# please use the "image_viewer_on" below to enable image viewer for individual pages or posts (_posts/ or [language]/_posts folders).
# image viewer can be enabled or disabled for all posts using the "image_viewer_posts: true" setting in _data/conf/main.yml.
#image_viewer_on: true
# please use the "image_lazy_loader_on" below to enable image lazy loader for individual pages or posts (_posts/ or [language]/_posts folders).
# image lazy loader can be enabled or disabled for all posts using the "image_lazy_loader_posts: true" setting in _data/conf/main.yml.
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

## About "Swift Syntax 4 (Frequently used functions in Array type)"

I had the opportunity to study iOS this time, so I've been studying grammar, and I'd like to write a post to summarize it.

In this article, I will introduce various functions of the Array type that are often used.

First, let's see how to create an array

{:data-align="center"}

<!-- outline-end -->

### Creating an Array

How to create and initialize an array

#### Example

```swift
var numbers: [Int] = [1, 2, 3]
```

### append function

Adds a new element to the end of an array.

#### Example

```swift
numbers.append(4) // numbers: [1, 2, 3, 4]
```

### count function

Returns the number of elements in an array.

#### Example

```swift
let count = numbers.count // count: 4
```

### isEmpty

Checks if an array is empty.

#### Example

```swift
if numbers.isEmpty {
    print("The array is empty")
} else {
    print("The array is not empty")
}
// Output: The array is not empty
```

### insert

Inserts an element at the specified index.

#### Example

```swift
numbers.insert(0, ar: 0) // numbers: [0,1,2,3,4]
```

### remove

Removes the element at the specified index.

#### Example

```swift
numbers.remove(at: 0) // numbers: [1,2,3,4]
```

### subscripting

Use an index to access or modify an element in an array.

#### Example

```swift
let firstNumber = numbers[0] // firstNumber: 1
numbers[2] = 5 // numbers: [1,2,5,4]
```

### contains

Checks if a specific element is in the array.

#### Example

```swift
if numbers.contains(5) {
    print("Contains 5!")
}
// Output: Contains 5!
```

### first and last

Access the first and last elements of an array. Returns 'nil' if the array is empty.

#### Example

```swift
let first = numbers.first // first: Optional(1)
let last = numbers.last // last: Optional(4)
```

### map, filter, reduce

Using the paradigm of functional programming, you can transform, filter, accumulate, and more on arrays.

#### example

```swift
let doubled = numbers.map { $0 * 2 } // doubled: [2, 4, 10, 8]
let evenNumbers = numbers.filter { $0 % 2 == 0 } // evenNumbers: [2, 4]
let sum = numbers.reduce(0, +) // sum: 12
```

### Functional programming features

It helps you manage complex expressions, makes your code more reusable and testable, and allows you to write more reliable code, even in multi-threaded environments.
