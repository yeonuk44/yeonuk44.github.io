---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id-1181-word-sorting
title: 백준 1181번, 단어 정렬 (with.Java)
# title: Baekjoon Problem 1181, Word Sorting (with Java)
# post specific
# if not specified, .name will be used from _data/owner/[language].yml
author: Yeonuk
# multiple category is not supported
category: Java
# multiple tag entries are possible
tags: [java, coding test]
# thumbnail image for post
img: ":post_pic1.jpg"
# disable comments on this page
# comments_disable: true

# publish date
date: 2025-08-06 09:00:00 +0900
# seo
# if not specified, date will be used.
#meta_modify_date: 2021-08-10 11:32:53 +0900
# check the meta_common_description in _data/owner/[language].yml
#meta_description: ""

# optional
# please use the "image_viewer_on" below to enable image viewer for individual pages or posts (_posts/ or [language]/_posts folders).
# image viewer can be enabled or disabled for all posts using the "image_viewer_posts: true" setting in _data/conf/main.yml.
#image_viewer_on: true
# please use the "image_lazy_loader_on" below to enable image lazy loader for individual pages or posts (_posts/ or [language]/_posts folders).
# image lazy loader can be enabled or disabled for all posts using the "image_lazy_loader_posts: true" setting in _data/conf/main.yml.
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

## 백준 10816번, 숫자 카드 2 (with.Java) 에 대하여 알아본 글입니다.

코딩 테스트 문제를 풀며, 풀었던 문제에 대한 회고와 다른 풀이 방법을 알아보며, 알아가고자 합니다.

문제에 대해 먼저 알아보겠습니다.

{:data-align="center"}

<!-- outline-end -->

### 문제

숫자 카드는 정수 하나가 적혀져 있는 카드이다.

상근이는 숫자 카드 N개를 가지고 있다.

정수 M개가 주어졌을 때, 이 수가 적혀있는 숫자 카드를 상근이가 몇 개 가지고 있는지 구하는 프로그램을 작성하시오.

#### 입력

첫째 줄에 상근이가 가지고 있는 숫자 카드의 개수 N(1 ≤ N ≤ 500,000)이 주어진다.

둘째 줄에는 숫자 카드에 적혀있는 정수가 주어진다.

숫자 카드에 적혀있는 수는 -10,000,000보다 크거나 같고, 10,000,000보다 작거나 같다.

셋째 줄에는 M(1 ≤ M ≤ 500,000)이 주어진다.

넷째 줄에는 상근이가 몇 개 가지고 있는 숫자 카드인지 구해야 할 M개의 정수가 주어지며, 이 수는 공백으로 구분되어져 있다.

이 수도 -10,000,000보다 크거나 같고, 10,000,000보다 작거나 같다.

#### 출력

첫째 줄에 입력으로 주어진 M개의 수에 대해서, 각 수가 적힌 숫자 카드를 상근이가 몇 개 가지고 있는지를 공백으로 구분해 출력한다.

### 문제 풀이

```java
import java.util.HashMap;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int N = Integer.valueOf(br.readLine());
        String[] cards = br.readLine().split(" ");
        HashMap<String, Integer> map = new HashMap<>();
        for(int i = 0; i < N; i++){
            map.put(cards[i], map.getOrDefault(cards[i], 0) + 1);
        }
        int M = Integer.valueOf(br.readLine());
        String[] check = br.readLine().split(" ");
        br.close();
        StringBuilder sb = new StringBuilder();

        for(int i = 0; i < M; i++){
            sb.append(map.getOrDefault(check[i], 0)).append(" ");
        }

        System.out.print(sb);
    }
}
```

#### 풀이 설명

먼저 BufferedReader를 사용하여 입력을 읽습니다.

첫 번째 입력 줄은 카드의 수 N을 나타내고, 두 번째 입력 줄은 카드의 숫자를 나타내는 문자열 배열입니다.

이를 통해 카드의 숫자들을 HashMap에 저장합니다. HashMap은 각 숫자의 등장 횟수를 기록합니다.

map.put(cards[i], map.getOrDefault(cards[i], 0) + 1) 코드를 통해 해당 숫자가 이미 map에 있으면 그 값을 1 증가시키고, 없으면 0을 기본값으로 설정하고 1로 초기화합니다.

세 번째 입력 줄은 체크할 숫자의 수 M을 나타내고, 네 번째 입력 줄은 체크할 숫자 배열입니다.

각 체크할 숫자가 HashMap에 몇 번 등장하는지 확인하고, 결과를 StringBuilder에 저장합니다.

map.getOrDefault(check[i], 0)를 통해 해당 숫자가 map에 있으면 그 값을 반환하고, 없으면 0을 반환합니다.

마지막으로, StringBuilder에 저장된 결과를 출력합니다.

이를 통해 각 체크할 숫자의 등장 횟수를 효율적으로 출력할 수 있습니다.
