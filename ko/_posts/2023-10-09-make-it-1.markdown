---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id_About_Make_It_1
title: 1로 만들기 (with.Java)
# title:  Make it 1 (with.Java)
# post specific
# if not specified, .name will be used from _data/owner/[language].yml
author: Yeonuk
# multiple category is not supported
category: Java
# multiple tag entries are possible
tags: [java, coding test]
# thumbnail image for post
img: ":post_pic1.jpg"
# disable comments on this page
# comments_disable: true

# publish date
date: 2023-10-09 09:00:00 +0900
# seo
# if not specified, date will be used.
#meta_modify_date: 2021-08-10 11:32:53 +0900
# check the meta_common_description in _data/owner/[language].yml
#meta_description: ""

# optional
# please use the "image_viewer_on" below to enable image viewer for individual pages or posts (_posts/ or [language]/_posts folders).
# image viewer can be enabled or disabled for all posts using the "image_viewer_posts: true" setting in _data/conf/main.yml.
#image_viewer_on: true
# please use the "image_lazy_loader_on" below to enable image lazy loader for individual pages or posts (_posts/ or [language]/_posts folders).
# image lazy loader can be enabled or disabled for all posts using the "image_lazy_loader_posts: true" setting in _data/conf/main.yml.
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
#published: false
---

<!-- outline-start -->

### 1로 만들기에 대하여 알아본 글입니다.

코딩 테스트 문제를 풀며, 풀었던 문제에 대한 회고와 다른 풀이 방법을 알아보며, 알아가고자 합니다.

문제에 대해 먼저 알아보겠습니다.

{:data-align="center"}

<!-- outline-end -->

#### 문제

정수가 있을 때, 짝수라면 반으로 나누고, 홀수라면 1을 뺀 뒤 반으로 나누면, 마지막엔 1이 됩니다. 예를 들어 10이 있다면 다음과 같은 과정으로 1이 됩니다.

10 / 2 = 5

(5 - 1) / 2 = 4

4 / 2 = 2

2 / 2 = 1

위와 같이 4번의 나누기 연산으로 1이 되었습니다.

정수들이 담긴 리스트 num_list가 주어질 때, num_list의 모든 원소를 1로 만들기 위해서 필요한 나누기 연산의 횟수를 return하도록 solution 함수를 완성해주세요.

##### 입출력 예시

| num_list           | result |
| ------------------ | ------ |
| [12, 4, 15, 1, 14] | 11     |

<!-- | start_num | end_num | result |
| --------- | ------- | ------ |
| 10        | 3       | 0      | -->

#### 문제에 대한 나의 풀이

```java
class Solution {
    public int solution(int[] num_list) {
        int answer = 0;
        for(int i = 0; i < num_list.length; i++){
            while(num_list[i] != 1){
                if(num_list[i] % 2 == 0){
                    num_list[i] = num_list[i] / 2;
                } else{
                    num_list[i] = (num_list[i] - 1) / 2;
                }
                answer++;
            }
        }
        return answer;
    }
}
```

##### 풀이 설명

int answer = 0;: 결과를 저장할 변수 answer를 초기화합니다. 초기값은 0입니다.

for(int i = 0; i < num_list.length; i++) : 입력 배열 num_list를 반복하면서 각 요소를 검사합니다.

while(num_list[i] != 1) : 현재 요소가 1이 아닌 경우, 다음 작업을 수행합니다.

if(num_list[i] % 2 == 0) : 현재 요소가 짝수인 경우:

현재 요소를 2로 나눕니다.

else : 현재 요소가 홀수인 경우:

현재 요소에서 1을 빼고 2로 나눕니다.

answer++;: 각 연산을 수행할 때마다 answer를 1씩 증가시킵니다. 이는 필요한 연산 횟수를 세는 역할을 합니다.

return answer;: 각 요소에 대한 연산 횟수를 합산한 answer를 반환합니다.
